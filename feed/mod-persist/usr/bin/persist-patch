#!/bin/bash
# Mod persist opkg util script.
# Allow users to persists patches across reboots, unexpected removals, resets, destructive firmware updates, ...

help() {
  echo "Usage: persist-patch command [arguments...]"
  echo ""
  echo "Where command is one of:"
  echo "  list : list persisted files and patches"
  echo "  install <patches> : add <patches> to the persisted list and apply them"
  echo "  remove <patches> : remove <patches> from the persisted list and revert them"
  echo "  apply : check and reinstall persisted patches if needed"
  echo "  help : show this help"
  echo ""
  echo "<patches> : Patch file absolute path in /data, with target file path and appended with '.patch' extension. I.e. pathes following : /data/[target file path].patch."
}

error() {
  case $1 in
    0)
    ;;
    1)
      echo "An unknown error occured." >&2
      help
      exit 1
    ;;
    2)
      echo "Unknown command: $2" >&2
      help
      exit 2
    ;;
    3)
      echo "Missing <files|patches> argument." >&2
      help
      exit 3
    ;;
    4)
      echo "Source file not found: $2" >&2
      exit 4
    ;;
    5)
      echo "Source file must be in /data folder and have .patch extension: $2" >&2
      exit 5
    ;;
    6)
      echo "Patch target file not found: $2" >&2
      exit 6
    ;;
    7)
      echo "Patch target must be a file: $2" >&2
      exit 7
    ;;
    8)
      echo "Patch execution failed for file: $2" >&2
      exit 8
    ;;
    *)
      echo "Error: Unknown error code $1" >&2
      exit $1
    ;;
  esac
}

PERSISTED_PATCHES_LIST_PATH="/data/etc/mod-persist/persisted_patches.conf"

check_file_arg() {
  local patch_file="$1"
  if [[ "$patch_file" != /data/*.patch ]]; then
    error 5
  fi
  if [[ ! -f "$patch_file" ]]; then
    error 4 "$patch_file"
  fi

  local target_file="${patch_file:5:-6}"
  if [[ ! -e "$target_file" ]]; then
    error 6 "$target_file"
  fi
  if [[ -d "$target_file" ]]; then
    error 7 "$target_file"
  fi
}

install() {
  local patch_file="$1"
  local target_file="${patch_file:5:-6}"
  local bak_file="${target_file}.bak"

  if [[ -e "$bak_file" ]]; then
    echo "Patch already installed: $patch_file"
  else
    cp "$target_file" "$bak_file"
    patch "$target_file" "$patch_file"
    if [[ $? -ne 0 ]]; then
      rm "$bak_file"
      error 8 "$patch_file"
    fi
    echo "Patch installed: $patch_file"
  fi
  
  if ! grep -q "^$patch_file$" "$PERSISTED_PATCHES_LIST_PATH"; then
    echo "$patch_file" >> "$PERSISTED_PATCHES_LIST_PATH"
    echo "File added in persisted list: $patch_file"
  else
    echo "File already in persisted list: $patch_file"
  fi
}

remove() {
  local patch_file="$1"
  local target_file="${patch_file:5:-6}"
  local bak_file="${target_file}.bak"
  
  if grep -q "^$patch_file$" "$PERSISTED_PATCHES_LIST_PATH"; then

    if [[ -e "$bak_file" ]]; then
      rm "$target_file"
      mv "$bak_file" "$target_file"
      echo "File removed: $patch_file"
    else
      echo "File already removed: $patch_file"
    fi

    # Ugly workaround because of busybox sed limitations
    grep -vxF -- "$patch_file" "$PERSISTED_PATCHES_LIST_PATH" > "${PERSISTED_PATCHES_LIST_PATH}.tmp"
    mv -f "${PERSISTED_PATCHES_LIST_PATH}.tmp" "$PERSISTED_PATCHES_LIST_PATH"
    echo "File removed from persisted list: $patch_file"
  else
    echo "File not found in persisted list: $patch_file"
  fi
}

case "$1" in
  list)
    echo "Persisted patches:"
    cat "$PERSISTED_PATCHES_LIST_PATH"
  ;;
  
  install)
    if [ $# -lt 2 ]; then
      error 3
    fi
    
    for arg in "${@:2}"; do
      check_file_arg "$arg"
      install "$arg"
    done
  ;;
  
  remove)
    if [ $# -lt 2 ]; then
      error 3
    fi
    
    for arg in "${@:2}"; do
      remove "$arg"
    done
  ;;
  
  apply)
    if [ $# -gt 1 ]; then
      error 2 "$(basename $0) $@"
    fi
    
    ret_code=0
    while IFS= read -r patch_file; do
      validity=$(check_file_arg "$patch_file")
      if [[ ! "$validity" -eq "0" ]]; then
        ret_code="$validity"
        continue
      fi
      
      install "$patch_file"
    done < "$PERSISTED_PATCHES_LIST_PATH"
    
    echo "Applied persisted files."
    exit "$ret_code"
  ;;
  
  help)
    help
    exit 0
  ;;
  
  *)
    error 2 "$(basename $0) $@"
  ;;
esac
